{"version":3,"sources":["webpack:///./src/plugin/SvgMorphPlugin.jsx?c47d","webpack:///./src/plugin/snapsvglite.js?73a3","webpack:///./examples/svgPoints.js"],"names":[],"mappings":"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","file":"svgPoints.js","sourcesContent":["import {path2curve} from './snapsvglite';\nconst SvgPlugin = function(target, vars, key) {\n  this.target = target;\n  this.vars = vars;\n  this.key = key;\n  this.propsData = {};\n};\n\nconst p = SvgPlugin.prototype = {\n  name: 'SVGMorph',\n};\np.getPointVars = function(d) {\n  return d.split(/\\s+/).map(item => item.split(',').map(_item => parseFloat(_item)));\n};\np.polygonPoints = function(start, end) {\n  const startArray = this.getPointVars(start);\n  const endArray = this.getPointVars(end);\n  if (startArray.length !== endArray.length) {\n    const long = startArray.length > endArray.length ? startArray : endArray;\n    const short = long === startArray ? endArray : startArray;\n    for (let i = short.length; i < long.length; i++) {\n      short[i] = short[short.length - 1];\n    }\n    return startArray.length > endArray.length ? [long, short] : [short, long];\n  }\n  return [startArray, endArray];\n};\np.getAnimStart = function() {\n  this.start = this.target.getAttribute(this.key);\n  if (this.key === 'd') {\n    this.pathArray = path2curve(this.start, this.vars);\n  } else {\n    this.pathArray = this.polygonPoints(this.start, this.vars);\n  }\n  return this.pathArray;\n};\np.setArrayRatio = function(ratio, start, item, i) {\n  if (typeof item === 'string') {\n    return item;\n  }\n  const startData = start[i];\n  return (item - startData) * ratio + startData;\n};\np.setRatio = function(ratio, tween) {\n  const start = this.pathArray[0];\n  const end = this.pathArray[1];\n  tween[this.key] = end.map((item, i) => {\n    const startData = start[i];\n    const t = item.map(this.setArrayRatio.bind(this, ratio, startData));\n    const name = t[0];\n    if (this.key === 'd') {\n      t.shift();\n    }\n    return this.key === 'd' ? `${name}${t.join(',')}` : t.join(',');\n  });\n  let vars = ratio === 1 ? this.vars : tween[this.key].join();\n  vars = ratio === 0 ? this.start : vars;\n\n  this.target.setAttribute(this.key, vars);\n};\nexport default SvgPlugin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/plugin/SvgMorphPlugin.jsx\n **/","/* eslint-disable */\n\n/*\n * Useful things from Adobe's Snap.svg adopted to the library needs\n * source: https://github.com/alexk111/SVG-Morpheus\n */\n\nconst spaces = '\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029';\nconst pathCommand = new RegExp(`([a-z])[${spaces},]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[${spaces}]*,?[${spaces}]*)+)`, 'ig');\nconst pathValues = new RegExp(`(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[${spaces}]*,?[${spaces}]*`, 'ig');\n\n// Parses given path string into an array of arrays of path segments\nconst parsePathString = function(pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  if (typeof pathString === typeof []) {\n    return pathString;\n  }\n  const paramCounts = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 };\n  const data = [];\n  String(pathString).replace(pathCommand, function(a, b, c) {\n    const params = [];\n    let name = b.toLowerCase();\n    c.replace(pathValues, function(a, b) {\n      b && params.push(+b);\n    });\n    if (name === 'm' && params.length > 2) {\n      data.push([b].concat(params.splice(0, 2)));\n      name = 'l';\n      b = b === 'm' ? 'l' : 'L';\n    }\n    if (name === 'o' && params.length === 1) {\n      data.push([b, params[0]]);\n    }\n    if (name === 'r') {\n      data.push([b].concat(params));\n    } else while (params.length >= paramCounts[name]) {\n      data.push([b].concat(params.splice(0, paramCounts[name])));\n      if (!paramCounts[name]) {\n        break;\n      }\n    }\n  });\n  return data;\n};\n\n\n// http://schepers.cc/getting-to-the-point\nconst catmullRom2bezier = function(crp, z) {\n  const d = [];\n  for (let i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    const p = [\n      { x: +crp[i - 2], y: +crp[i - 1] },\n      { x: +crp[i], y: +crp[i + 1] },\n      { x: +crp[i + 2], y: +crp[i + 3] },\n      { x: +crp[i + 4], y: +crp[i + 5] },\n    ];\n    if (z) {\n      if (!i) {\n        p[0] = { x: +crp[iLen - 2], y: +crp[iLen - 1] };\n      } else if (iLen - 4 === i) {\n        p[3] = { x: +crp[0], y: +crp[1] };\n      } else if (iLen - 2 === i) {\n        p[2] = { x: +crp[0], y: +crp[1] };\n        p[3] = { x: +crp[2], y: +crp[3] };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = { x: +crp[i], y: +crp[i + 1] };\n      }\n    }\n    d.push(['C',\n      (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n      (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n      (p[1].x + 6 * p[2].x - p[3].x) / 6,\n      (p[1].y + 6 * p[2].y - p[3].y) / 6,\n      p[2].x,\n      p[2].y,\n    ]);\n  }\n  return d;\n};\n\nconst ellipsePath = function(_x, _y, _rx, _ry, a) {\n  const x = +_x;\n  const y = +_y;\n  const rx = +_rx;\n  const ry = a === null && _ry === null ? _rx : +_ry;\n  let res;\n  if (a !== null) {\n    const rad = Math.PI / 180;\n    const x1 = x + rx * Math.cos(-ry * rad);\n    const x2 = x + rx * Math.cos(-a * rad);\n    const y1 = y + rx * Math.sin(-ry * rad);\n    const y2 = y + rx * Math.sin(-a * rad);\n    res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [\n      ['M', x, y],\n      ['m', 0, -ry],\n      ['a', rx, ry, 0, 1, 1, 0, 2 * ry],\n      ['a', rx, ry, 0, 1, 1, 0, -2 * ry],\n      ['z'],\n    ];\n  }\n  return res;\n};\n\nconst pathToAbsolute = function(_pathArray) {\n  const pathArray = parsePathString(_pathArray);\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n  let res = [];\n  let x = 0;\n  let y = 0;\n  let mx = 0;\n  let my = 0;\n  let start = 0;\n  let pa0;\n  let dots;\n  if (pathArray[0][0] === 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n  const crz = pathArray.length === 3 &&\n    pathArray[0][0] === 'M' &&\n    pathArray[1][0].toUpperCase() === 'R' &&\n    pathArray[2][0].toUpperCase() === 'Z';\n  let r;\n  let pa;\n  let j;\n  let jj;\n  for (let i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n    if (pa0 !== pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n        case 'R':\n          dots = [x, y].concat(pa.slice(1));\n          for (j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n        case 'O':\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n        case 'U':\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = ['U'].concat(res[res.length - 1].slice(-2));\n          break;\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n        default:\n          for (j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + ((j % 2) ? x : y);\n          }\n      }\n    } else if (pa0 === 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else if (pa0 === 'O') {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 === 'U') {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = ['U'].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (let k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n    if (pa0 !== 'O') {\n      switch (r[0]) {\n        case 'Z':\n          x = +mx;\n          y = +my;\n          break;\n        case 'H':\n          x = r[1];\n          break;\n        case 'V':\n          y = r[1];\n          break;\n        case 'M':\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n\n  return res;\n};\n\n\nconst l2c = function(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n};\nconst q2c = function(x1, y1, ax, ay, x2, y2) {\n  const _13 = 1 / 3;\n  const _23 = 2 / 3;\n  return [\n    _13 * x1 + _23 * ax,\n    _13 * y1 + _23 * ay,\n    _13 * x2 + _23 * ax,\n    _13 * y2 + _23 * ay,\n    x2,\n    y2,\n  ];\n};\nconst a2c = function(_x1, _y1, _rx, _ry, angle, largeArcFlag, sweepFlag, _x2, _y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  const _120 = Math.PI * 120 / 180;\n  const rad = Math.PI / 180 * (+angle || 0);\n  let res = [];\n  let xy;\n  let x1 = _x1;\n  let y1 = _y1;\n  let x2 = _x2;\n  let y2 = _y2;\n  let rx = _rx;\n  let ry = _ry;\n  let f1;\n  let f2;\n  let cx;\n  let cy;\n  const rotate = function(x, y, _rad) {\n    const X = x * Math.cos(_rad) - y * Math.sin(_rad);\n    const Y = x * Math.sin(_rad) + y * Math.cos(_rad);\n    return { x: X, y: Y };\n  };\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    // const cos = Math.cos(Math.PI / 180 * angle);\n    // const sin = Math.sin(Math.PI / 180 * angle);\n    const x = (x1 - x2) / 2;\n    const y = (y1 - y2) / 2;\n    let h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n    const rx2 = rx * rx;\n    const ry2 = ry * ry;\n    const k = (largeArcFlag === sweepFlag ? -1 : 1) *\n      Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n    cx = k * rx * y / ry + (x1 + x2) / 2;\n    cy = k * -ry * x / rx + (y1 + y2) / 2;\n    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? Math.PI - f1 : f1;\n    f2 = x2 < cx ? Math.PI - f2 : f2;\n    // f1 < 0 && (f1 = Math.PI * 2 + f1);\n    // f2 < 0 && (f2 = Math.PI * 2 + f2);\n    f1 = f1 < 0 ? Math.PI * 2 + f1 : f1;\n    f2 = f2 < 0 ? Math.PI * 2 + f2 : f2;\n    if (sweepFlag && f1 > f2) {\n      f1 = f1 - Math.PI * 2;\n    }\n    if (!sweepFlag && f2 > f1) {\n      f2 = f2 - Math.PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n  let df = f2 - f1;\n  if (Math.abs(df) > _120) {\n    const f2old = f2;\n    const x2old = x2;\n    const y2old = y2;\n    f2 = f1 + _120 * (sweepFlag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweepFlag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n  df = f2 - f1;\n  const c1 = Math.cos(f1);\n  const s1 = Math.sin(f1);\n  const c2 = Math.cos(f2);\n  const s2 = Math.sin(f2);\n  const t = Math.tan(df / 4);\n  const hx = 4 / 3 * rx * t;\n  const hy = 4 / 3 * ry * t;\n  const m1 = [x1, y1];\n  const m2 = [x1 + hx * s1, y1 - hy * c1];\n  const m3 = [x2 + hx * s2, y2 - hy * c2];\n  const m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  }\n  res = [m2, m3, m4].concat(res).join().split(',');\n  const newres = [];\n  for (let i = 0, ii = res.length; i < ii; i++) {\n    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n  }\n  return newres;\n};\n\nexport function path2curve(path, path2) {\n  const p = pathToAbsolute(path);\n  const p2 = path2 && pathToAbsolute(path2);\n  const attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null };\n  const attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null };\n  const pcoms1 = []; // path commands of original path p\n  const pcoms2 = []; // path commands of original path p2\n  let pfirst = ''; // temporary holder for original path command\n  let pcom = ''; // holder for previous path command of original path\n  let ii;\n  const processPath = function(__path, d, _pcom) {\n    let nx;\n    let ny;\n    let _path = __path;\n    if (!_path) {\n      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n    }\n    // !(_path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\n    if (!(_path[0] in { T: 1, Q: 1 })) {\n      d.qx = d.qy = null;\n    }\n    switch (_path[0]) {\n      case 'M':\n        d.X = _path[1];\n        d.Y = _path[2];\n        break;\n      case 'A':\n        _path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(_path.slice(1))));\n        break;\n      case 'S':\n        if (_pcom === 'C' || _pcom === 'S') { // In 'S' case we have to take into account, if the previous command is C/S.\n          nx = d.x * 2 - d.bx;          // And reflect the previous\n          ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n        } else {                            // or some else or nothing\n          nx = d.x;\n          ny = d.y;\n        }\n        _path = ['C', nx, ny].concat(_path.slice(1));\n        break;\n      case 'T':\n        if (_pcom === 'Q' || _pcom === 'T') { // In 'T' case we have to take into account, if the previous command is Q/T.\n          d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n          d.qy = d.y * 2 - d.qy;        // to case 'S'.\n        } else {                            // or something else or nothing\n          d.qx = d.x;\n          d.qy = d.y;\n        }\n        _path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, _path[1], _path[2]));\n        break;\n      case 'Q':\n        d.qx = _path[1];\n        d.qy = _path[2];\n        _path = ['C'].concat(q2c(d.x, d.y, _path[1], _path[2], _path[3], _path[4]));\n        break;\n      case 'L':\n        _path = ['C'].concat(l2c(d.x, d.y, _path[1], _path[2]));\n        break;\n      case 'H':\n        _path = ['C'].concat(l2c(d.x, d.y, _path[1], d.y));\n        break;\n      case 'V':\n        _path = ['C'].concat(l2c(d.x, d.y, d.x, _path[1]));\n        break;\n      case 'Z':\n        _path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n        break;\n      default:\n        break;\n    }\n    return _path;\n  };\n  const fixArc = function(pp, _i) {\n    let i = _i;\n    if (pp[i].length > 7) {\n      pp[i].shift();\n      const pi = pp[i];\n      while (pi.length) {\n        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n        // p2 && (pcoms2[i] = 'A'); // the same as above\n        if (p2) {\n          pcoms2[i] = 'A';\n        }\n        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n      }\n      pp.splice(i, 1);\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n    return i;\n  };\n  const fixM = function(path1, _path2, a1, a2, i) {\n    if (path1 && _path2 && path1[i][0] === 'M' && _path2[i][0] !== 'M') {\n      _path2.splice(i, 0, ['M', a2.x, a2.y]);\n      a1.bx = 0;\n      a1.by = 0;\n      a1.x = path1[i][1];\n      a1.y = path1[i][2];\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n\n  ii = Math.max(p.length, p2 && p2.length || 0);\n  for (let i = 0; i < ii; i++) {\n    // p[i] && (pfirst = p[i][0]); // save current path command\n    if (p[i]) {\n      pfirst = p[i][0];\n    }\n    if (pfirst !== 'C') { // C is not saved yet, because it may be result of conversion\n      pcoms1[i] = pfirst; // Save current path command\n      // i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n      if (i) {\n        pcom = pcoms1[i - 1];\n      }\n    }\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] !== 'A' && pfirst === 'C') {\n      pcoms1[i] = 'C'; // A is the only command\n    }\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n    i = fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n    if (p2) { // the same procedures is done to p2\n      // p2[i] && (pfirst = p2[i][0]);\n      if (p2[i]) {\n        pfirst = p2[i][0];\n      }\n      if (pfirst !== 'C') {\n        pcoms2[i] = pfirst;\n        if (i) {\n          pcom = pcoms2[i - 1];\n        }\n        // i && (pcom = pcoms2[i - 1]);\n      }\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] !== 'A' && pfirst === 'C') {\n        pcoms2[i] = 'C';\n      }\n      fixArc(p2, i);\n    }\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    const seg = p[i];\n    const seg2 = p2 && p2[i];\n    const seglen = seg.length;\n    const seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n  return p2 ? [p, p2] : p;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/plugin/snapsvglite.js\n **/","import Tween from 'rc-tween-one';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport SvgMorphPlugin from '../src/plugin/SvgMorphPlugin';\nTween.plugins.push(SvgMorphPlugin);\n\nclass Demo extends React.Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  render() {\n    return (\n      <svg width=\"100%\" height=\"600\" version=\"1.2\" xmlns=\"http://www.w3.org/2000/svg\">\n        <Tween animation={[{ points: '300,10 500,200 120,230 450,220 0,20' }, { points: '100,10 200,200 120,430 450,220 0,20' }]}\n          style={{ fill: '#fff000', storkeWidth: 1, stroke: '#000fff' }}\n          component=\"polygon\"\n          points=\"220,100 300,210 170,250 123,234\"\n          attr=\"attr\"\n        />\n      </svg>);\n  }\n}\nReactDom.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/svgPoints.js\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./examples/bezier.js","webpack:///./src/plugin/BezierPlugin.jsx"],"names":[],"mappings":"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","file":"bezier.js","sourcesContent":["import Tween from 'rc-tween-one';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport BezierPlugin from '../src/plugin/BezierPlugin';\nTween.plugins.push(BezierPlugin);\nclass Demo extends React.Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  render() {\n    return (<div style={{position: 'relative', height: 300}}>\n      <Tween\n        animation={{bezier: {type: 'thru', autoRotate: true, vars: [{x: 200, y: 200}, {x: 400, y: 0}, {x: 600, y: 200}, {x: 800, y: 0}]}, duration: 5000}}\n        style={{width: 100}}>\n        <div>执行动效</div>\n      </Tween>\n      <div\n        style={{width: 5, height: 5, background: '#000', position: 'absolute', top: 0, transform: 'translate(200px,200px)'}}></div>\n      <div\n        style={{width: 5, height: 5, background: '#000', position: 'absolute', top: 0, transform: 'translate(400px,0px)'}}></div>\n      <div\n        style={{width: 5, height: 5, background: '#000', position: 'absolute', top: 0, transform: 'translate(600px,200px)'}}></div>\n      <div\n        style={{width: 5, height: 5, background: '#000', position: 'absolute', top: 0, transform: 'translate(800px,0px)'}}></div>\n    </div>);\n  }\n}\nReactDom.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/bezier.js\n **/","/**\n * Created by jljsj on 15/12/22.\n * The algorithm is GSAP BezierPlugin VERSION: beta 1.3.4\n */\nimport {\n  checkStyleName,\n  getTransform,\n} from 'style-utils';\nconst _RAD2DEG = 180 / Math.PI;\nconst _r1 = [];\nconst _r2 = [];\nconst _r3 = [];\nconst _corProps = {};\nconst _correlate = ',x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,';\nfunction createMatrix(style) {\n  return (window.WebKitCSSMatrix && new window.WebKitCSSMatrix(style)) ||\n    (window.MozCSSMatrix && new window.MozCSSMatrix(style)) ||\n    (window.MsCSSMatrix && new window.MsCSSMatrix(style)) ||\n    (window.OCSSMatrix && new window.OCSSMatrix(style)) ||\n    (window.CSSMatrix && new window.CSSMatrix(style)) || {};\n}\n\nconst GsapBezier = {\n  Segment(a, b, c, d) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.da = d - a;\n    this.ca = c - a;\n    this.ba = b - a;\n  },\n  cubicToQuadratic(a, b, c, d) {\n    const q1 = { a: a };\n    const q2 = {};\n    const q3 = {};\n    const q4 = { c: d };\n    const mab = (a + b) / 2;\n    const mbc = (b + c) / 2;\n    const mcd = (c + d) / 2;\n    const mabc = (mab + mbc) / 2;\n    const mbcd = (mbc + mcd) / 2;\n    const m8 = (mbcd - mabc) / 8;\n    q1.b = mab + (a - mab) / 4;\n    q2.b = mabc + m8;\n    q1.c = q2.a = (q1.b + q2.b) / 2;\n    q2.c = q3.a = (mabc + mbcd) / 2;\n    q3.b = mbcd - m8;\n    q4.b = mcd + (d - mcd) / 4;\n    q3.c = q4.a = (q3.b + q4.b) / 2;\n    return [q1, q2, q3, q4];\n  },\n  calculateControlPoints(a, curviness, quad, basic, correlate) {\n    const l = a.length - 1;\n    let i;\n    let ii = 0;\n    let p1;\n    let p2;\n    let p3;\n    let seg;\n    let m1;\n    let m2;\n    let mm;\n    let cp2;\n    let qb;\n    let r1;\n    let r2;\n    let tl;\n    let cp1 = a[0].a;\n    for (i = 0; i < l; i++) {\n      seg = a[ii];\n      p1 = seg.a;\n      p2 = seg.d;\n      p3 = a[ii + 1].d;\n\n      if (correlate) {\n        r1 = _r1[i];\n        r2 = _r2[i];\n        tl = ((r2 + r1) * curviness * 0.25) / (basic ? 0.5 : _r3[i] || 0.5);\n        const _aa = (r1 !== 0 ? tl / r1 : 0);\n        const _a = (basic ? curviness * 0.5 : _aa);\n        m1 = p2 - (p2 - p1) * _a;\n        const bb = (r2 !== 0 ? tl / r2 : 0);\n        const b = (basic ? curviness * 0.5 : bb);\n        m2 = p2 + (p3 - p2) * b;\n        mm = p2 - (m1 + (((m2 - m1) * ((r1 * 3 / (r1 + r2)) + 0.5) / 4) || 0));\n      } else {\n        m1 = p2 - (p2 - p1) * curviness * 0.5;\n        m2 = p2 + (p3 - p2) * curviness * 0.5;\n        mm = p2 - (m1 + m2) / 2;\n      }\n      m1 += mm;\n      m2 += mm;\n\n      seg.c = cp2 = m1;\n      if (i !== 0) {\n        seg.b = cp1;\n      } else {\n        seg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6;\n      }\n\n      seg.da = p2 - p1;\n      seg.ca = cp2 - p1;\n      seg.ba = cp1 - p1;\n\n      if (quad) {\n        qb = this.cubicToQuadratic(p1, cp1, cp2, p2);\n        a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n        ii += 4;\n      } else {\n        ii++;\n      }\n\n      cp1 = m2;\n    }\n    seg = a[ii];\n    seg.b = cp1;\n    seg.c = cp1 + (seg.d - cp1) * 0.4;\n    seg.da = seg.d - seg.a;\n    seg.ca = seg.c - seg.a;\n    seg.ba = cp1 - seg.a;\n    if (quad) {\n      qb = this.cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n      a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n    }\n  },\n  parseAnchors(_values, p, correlate, prepend) {\n    const a = [];\n    let l;\n    let i;\n    let p1;\n    let p2;\n    let p3;\n    let tmp;\n    let values = _values;\n    if (prepend) {\n      values = [prepend].concat(values);\n      i = values.length;\n      while (--i > -1) {\n        tmp = values[i][p];\n        if (typeof tmp === 'string' && tmp.charAt(1) === '=') {\n          values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2));\n        }\n      }\n    }\n    l = values.length - 2;\n    if (l < 0) {\n      a[0] = new this.Segment(values[0][p], 0, 0, values[(l < -1) ? 0 : 1][p]);\n      return a;\n    }\n    for (i = 0; i < l; i++) {\n      p1 = values[i][p];\n      p2 = values[i + 1][p];\n      a[i] = new this.Segment(p1, 0, 0, p2);\n      if (correlate) {\n        p3 = values[i + 2][p];\n        _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n        _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n      }\n    }\n    a[i] = new this.Segment(values[i][p], 0, 0, values[i + 1][p]);\n    return a;\n  },\n  bezierThrough(_values, _curviness, quadratic, basic, __correlate, _prepend) {\n    let values = _values;\n    let curviness = _curviness;\n    let correlate = __correlate;\n    let prepend = _prepend;\n    const obj = {};\n    const props = [];\n    const first = prepend || values[0];\n    let i;\n    let p;\n    let a;\n    let j;\n    let r;\n    let l;\n    let seamless;\n    let last;\n    correlate = (typeof(correlate) === 'string') ? ',' + correlate + ',' : _correlate;\n    if (curviness === null) {\n      curviness = 1;\n    }\n    Object.keys(values[0]).forEach(key => {\n      props.push(key);\n    });\n    if (values.length > 1) {\n      last = values[values.length - 1];\n      seamless = true;\n      i = props.length;\n      while (--i > -1) {\n        p = props[i];\n        if (Math.abs(first[p] - last[p]) > 0.05) {\n          seamless = false;\n          break;\n        }\n      }\n      if (seamless) {\n        values = values.concat();\n        if (prepend) {\n          values.unshift(prepend);\n        }\n        values.push(values[1]);\n        prepend = values[values.length - 3];\n      }\n    }\n    _r1.length = _r2.length = _r3.length = 0;\n    i = props.length;\n    while (--i > -1) {\n      p = props[i];\n      _corProps[p] = (correlate.indexOf(',' + p + ',') !== -1);\n      obj[p] = this.parseAnchors(values, p, _corProps[p], prepend);\n    }\n    i = _r1.length;\n    while (--i > -1) {\n      _r1[i] = Math.sqrt(_r1[i]);\n      _r2[i] = Math.sqrt(_r2[i]);\n    }\n    if (!basic) {\n      i = props.length;\n      while (--i > -1) {\n        if (_corProps[p]) {\n          a = obj[props[i]];\n          l = a.length - 1;\n          for (j = 0; j < l; j++) {\n            r = a[j + 1].da / _r2[j] + a[j].da / _r1[j];\n            _r3[j] = (_r3[j] || 0) + r * r;\n          }\n        }\n      }\n      i = _r3.length;\n      while (--i > -1) {\n        _r3[i] = Math.sqrt(_r3[i]);\n      }\n    }\n    i = props.length;\n    j = quadratic ? 4 : 1;\n    while (--i > -1) {\n      p = props[i];\n      a = obj[p];\n      this.calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]);\n      if (seamless) {\n        a.splice(0, j);\n        a.splice(a.length - j, j);\n      }\n    }\n    return obj;\n  },\n  parseBezierData(data) {\n    const values = data.vars.concat();\n    const type = data.type;\n    const prepend = data.startPoint;\n\n    const obj = {};\n    const inc = (type === 'cubic') ? 3 : 2;\n    const soft = (type === 'soft');\n    let a;\n    let b;\n    let c;\n    let d;\n    let cur;\n    let l;\n    let p;\n    let cnt;\n    let tmp;\n    if (soft) {\n      values.splice(0, 0, prepend);\n    }\n\n    if (values === null || values.length < inc + 1) {\n      return console.error('invalid Bezier data');\n    }\n    for (let i = 1; i >= 0; i--) {\n      p = i ? 'x' : 'y';\n      obj[p] = cur = [];\n      cnt = 0;\n      for (let j = 0; j < values.length; j++) {\n        tmp = values[j][p];\n        const _a = typeof tmp === 'string' && tmp.charAt(1) === '=' ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n        a = (prepend === null) ? values[j][p] : _a;\n        if (soft && j > 1 && j < values.length - 1) {\n          cur[cnt++] = (a + cur[cnt - 2]) / 2;\n        }\n        cur[cnt++] = a;\n      }\n      l = cnt - inc + 1;\n      cnt = 0;\n      for (let jj = 0; jj < l; jj += inc) {\n        a = cur[jj];\n        b = cur[jj + 1];\n        c = cur[jj + 2];\n        d = (inc === 2) ? 0 : cur[jj + 3];\n        cur[cnt++] = tmp = (inc === 3) ? new this.Segment(a, b, c, d) : new this.Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n      }\n      cur.length = cnt;\n    }\n    return obj;\n  },\n  addCubicLengths(a, steps, resolution) {\n    const inc = 1 / resolution;\n    let j = a.length;\n    let d;\n    let d1;\n    let s;\n    let da;\n    let ca;\n    let ba;\n    let p;\n    let i;\n    let inv;\n    let bez;\n    let index;\n    while (--j > -1) {\n      bez = a[j];\n      s = bez.a;\n      da = bez.d - s;\n      ca = bez.c - s;\n      ba = bez.b - s;\n      d = d1 = 0;\n      for (i = 1; i <= resolution; i++) {\n        p = inc * i;\n        inv = 1 - p;\n        d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n        index = j * resolution + i - 1;\n        steps[index] = (steps[index] || 0) + d * d;\n      }\n    }\n  },\n  parseLengthData(obj, _resolution) {\n    const resolution = _resolution || 6;\n    const a = [];\n    const lengths = [];\n    const threshold = resolution - 1;\n    const segments = [];\n    let d = 0;\n    let total = 0;\n    let curLS = [];\n    Object.keys(obj).forEach((key) => {\n      this.addCubicLengths(obj[key], a, resolution);\n    });\n    a.forEach((c, i)=> {\n      d += Math.sqrt(c);\n      let index = i % resolution;\n      curLS[index] = d;\n      if (index === threshold) {\n        total += d;\n        index = (i / resolution) >> 0;\n        segments[index] = curLS;\n        lengths[index] = total;\n        d = 0;\n        curLS = [];\n      }\n    });\n    return { length: total, lengths: lengths, segments: segments };\n  },\n};\n\nconst Bezier = function(target, vars) {\n  this.vars = this.getDefaultData(vars);\n  this.target = target;\n  this.transform = checkStyleName('transform');\n};\nBezier.prototype = {\n  name: 'bezier',\n  getDefaultData(obj) {\n    return {\n      type: obj.type || 'soft',\n      autoRotate: obj.autoRotate || false,\n      vars: obj.vars || {},\n      startPoint: null,\n    };\n  },\n  init() {\n    const vars = this.vars;\n    const autoRotate = vars.autoRotate;\n    this._timeRes = !vars.timeResolution ? 6 : parseInt(vars.timeResolution, 10);\n    const a = (autoRotate === true) ? 0 : Number(autoRotate);\n    const b = (autoRotate instanceof Array) ? autoRotate : [['x', 'y', 'rotation', ( a || 0)]];\n    this._autoRotate = autoRotate ? b : null;\n    this._beziers = (vars.type !== 'cubic' && vars.type !== 'quadratic' && vars.type !== 'soft') ? GsapBezier.bezierThrough(vars.vars, isNaN(vars.curviness) ? 1 : vars.curviness, false, (vars.type === 'thruBasic'), vars.correlate, vars.startPoint) : GsapBezier.parseBezierData(vars);\n    this._segCount = this._beziers.x.length;\n    if (this._timeRes) {\n      const ld = GsapBezier.parseLengthData(this._beziers, this._timeRes);\n      this._length = ld.length;\n      this._lengths = ld.lengths;\n      this._segments = ld.segments;\n      this._l1 = this._li = this._s1 = this._si = 0;\n      this._l2 = this._lengths[0];\n      this._curSeg = this._segments[0];\n      this._s2 = this._curSeg[0];\n      this._prec = 1 / this._curSeg.length;\n    }\n  },\n  set(v) {\n    const segments = this._segCount;\n    const XYobj = {};\n    let curIndex;\n    let inv;\n    let i;\n    let p;\n    let b;\n    let t;\n    let val;\n    let lengths;\n    let curSeg;\n    let value;\n    let rotate;\n    if (!this._timeRes) {\n      const _cur = (v >= 1) ? segments - 1 : (segments * v) >> 0;\n      curIndex = (v < 0) ? 0 : _cur;\n      t = (v - (curIndex * (1 / segments))) * segments;\n    } else {\n      lengths = this._lengths;\n      curSeg = this._curSeg;\n      value = v * this._length;\n      i = this._li;\n      if (value > this._l2 && i < segments) {\n        this._l2 = lengths[++i];\n        this._l1 = lengths[i - 1];\n        this._li = i;\n        this._curSeg = curSeg = this._segments[i];\n        this._s2 = curSeg[(this._s1 = this._si = 0)];\n      } else if (value < this._l1 && i > 0) {\n        this._l1 = lengths[--i];\n        if (i === 0 && value < this._l1) {\n          this._l1 = 0;\n        } else {\n          i++;\n        }\n        this._l2 = lengths[i];\n        this._li = i;\n        this._curSeg = curSeg = this._segments[i];\n        this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n        this._s2 = curSeg[this._si];\n      }\n      curIndex = i;\n      value -= this._l1;\n      i = this._si;\n      if (value > this._s2 && i < curSeg.length - 1) {\n        this._s2 = curSeg[++i];\n        this._s1 = curSeg[i - 1];\n        this._si = i;\n      } else if (value < this._s1 && i > 0) {\n        this._s1 = curSeg[--i];\n        if (i === 0 && value < this._s1) {\n          this._s1 = 0;\n        } else {\n          i++;\n        }\n        this._s2 = curSeg[i];\n        this._si = i;\n      }\n      t = (i + (value - this._s1) / (this._s2 - this._s1)) * this._prec;\n    }\n    inv = 1 - t;\n    for (i = 1; i >= 0; i--) {\n      p = i ? 'x' : 'y';\n      b = this._beziers[p][curIndex];\n      val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n      XYobj[p] = val;\n    }\n    if (this._autoRotate) {\n      const ar = this._autoRotate;\n      let b2;\n      let x1;\n      let y1;\n      let x2;\n      let y2;\n      let add;\n      let conv;\n      i = ar.length;\n      while (--i > -1) {\n        p = ar[i][2];\n        add = ar[i][3] || 0;\n        conv = (ar[i][4] === true) ? 1 : _RAD2DEG;\n        b = this._beziers[ar[i][0]];\n        b2 = this._beziers[ar[i][1]];\n\n        if (b && b2) {\n          b = b[curIndex];\n          b2 = b2[curIndex];\n\n          x1 = b.a + (b.b - b.a) * t;\n          x2 = b.b + (b.c - b.b) * t;\n          x1 += (x2 - x1) * t;\n          x2 += ((b.c + (b.d - b.c) * t) - x2) * t;\n\n          y1 = b2.a + (b2.b - b2.a) * t;\n          y2 = b2.b + (b2.c - b2.b) * t;\n          y1 += (y2 - y1) * t;\n          y2 += ((b2.c + (b2.d - b2.c) * t) - y2) * t;\n          const _r = Math.atan2(y2 - y1, x2 - x1) * conv;\n          rotate = _r + add;\n        }\n      }\n    }\n    return rotate ? 'translate(' + XYobj.x + 'px,' + XYobj.y + 'px) rotate(' + rotate + 'deg)' : 'translate(' + XYobj.x + 'px,' + XYobj.y + 'px)';\n  },\n  getComputedStyle() {\n    return document.defaultView ? document.defaultView.getComputedStyle(this.target) : {};\n  },\n  getAnimStart() {\n    const computedStyle = this.getComputedStyle();\n    const transform = computedStyle[this.transform];\n    const matrix = createMatrix(transform || '');\n    // this.startRotate = parseFloat((-Math.atan2(matrix.m21, matrix.m11) * _RAD2DEG).toFixed(2));\n    this.vars.startPoint = { x: matrix.e, y: matrix.f };\n    this.init();\n  },\n  setRatio(r, t) {\n    const transform = getTransform(this.set(r));\n    t.style.transform = transform;\n  },\n};\nBezier.bezierThrough = GsapBezier.bezierThrough;\nBezier.cubicToQuadratic = GsapBezier.cubicToQuadratic;\nBezier.quadraticToCubic = (a, b, c)=> {\n  return new GsapBezier.Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n};\n\nexport default Bezier;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/plugin/BezierPlugin.jsx\n **/"],"sourceRoot":""}